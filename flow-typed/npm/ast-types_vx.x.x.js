// flow-typed signature: 2e129a8d6c869ecbf7a93103eb8428e7
// flow-typed version: <<STUB>>/ast-types_v^0.9.12/flow_v0.70.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'ast-types'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'ast-types' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'ast-types/def/babel' {
  declare module.exports: any;
}

declare module 'ast-types/def/babel6-core' {
  declare module.exports: any;
}

declare module 'ast-types/def/babel6' {
  declare module.exports: any;
}

declare module 'ast-types/def/core' {
  declare module.exports: any;
}

declare module 'ast-types/def/e4x' {
  declare module.exports: any;
}

declare module 'ast-types/def/es6' {
  declare module.exports: any;
}

declare module 'ast-types/def/es7' {
  declare module.exports: any;
}

declare module 'ast-types/def/esprima' {
  declare module.exports: any;
}

declare module 'ast-types/def/flow' {
  declare module.exports: any;
}

declare module 'ast-types/def/jsx' {
  declare module.exports: any;
}

declare module 'ast-types/def/mozilla' {
  declare module.exports: any;
}

declare module 'ast-types/fork' {
  declare module.exports: any;
}

declare module 'ast-types/lib/equiv' {
  declare module.exports: any;
}

declare module 'ast-types/lib/node-path' {
  declare module.exports: any;
}

declare module 'ast-types/lib/path-visitor' {
  declare module.exports: any;
}

declare module 'ast-types/lib/path' {
  declare module.exports: any;
}

declare module 'ast-types/lib/scope' {
  declare module.exports: any;
}

declare module 'ast-types/lib/shared' {
  declare module.exports: any;
}

declare module 'ast-types/lib/types' {
  declare module.exports: any;
}

declare module 'ast-types/main' {
  declare module.exports: any;
}

// Filename aliases
declare module 'ast-types/def/babel.js' {
  declare module.exports: $Exports<'ast-types/def/babel'>;
}
declare module 'ast-types/def/babel6-core.js' {
  declare module.exports: $Exports<'ast-types/def/babel6-core'>;
}
declare module 'ast-types/def/babel6.js' {
  declare module.exports: $Exports<'ast-types/def/babel6'>;
}
declare module 'ast-types/def/core.js' {
  declare module.exports: $Exports<'ast-types/def/core'>;
}
declare module 'ast-types/def/e4x.js' {
  declare module.exports: $Exports<'ast-types/def/e4x'>;
}
declare module 'ast-types/def/es6.js' {
  declare module.exports: $Exports<'ast-types/def/es6'>;
}
declare module 'ast-types/def/es7.js' {
  declare module.exports: $Exports<'ast-types/def/es7'>;
}
declare module 'ast-types/def/esprima.js' {
  declare module.exports: $Exports<'ast-types/def/esprima'>;
}
declare module 'ast-types/def/flow.js' {
  declare module.exports: $Exports<'ast-types/def/flow'>;
}
declare module 'ast-types/def/jsx.js' {
  declare module.exports: $Exports<'ast-types/def/jsx'>;
}
declare module 'ast-types/def/mozilla.js' {
  declare module.exports: $Exports<'ast-types/def/mozilla'>;
}
declare module 'ast-types/fork.js' {
  declare module.exports: $Exports<'ast-types/fork'>;
}
declare module 'ast-types/lib/equiv.js' {
  declare module.exports: $Exports<'ast-types/lib/equiv'>;
}
declare module 'ast-types/lib/node-path.js' {
  declare module.exports: $Exports<'ast-types/lib/node-path'>;
}
declare module 'ast-types/lib/path-visitor.js' {
  declare module.exports: $Exports<'ast-types/lib/path-visitor'>;
}
declare module 'ast-types/lib/path.js' {
  declare module.exports: $Exports<'ast-types/lib/path'>;
}
declare module 'ast-types/lib/scope.js' {
  declare module.exports: $Exports<'ast-types/lib/scope'>;
}
declare module 'ast-types/lib/shared.js' {
  declare module.exports: $Exports<'ast-types/lib/shared'>;
}
declare module 'ast-types/lib/types.js' {
  declare module.exports: $Exports<'ast-types/lib/types'>;
}
declare module 'ast-types/main.js' {
  declare module.exports: $Exports<'ast-types/main'>;
}
